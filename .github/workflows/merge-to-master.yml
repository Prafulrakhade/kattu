name: Merge to Master

on:
  workflow_call:
    inputs:
      runs-on:
        description: Platform to execute on
        type: string
        default: ubuntu-latest
      BRANCH_TO_RELEASE:
        description: "The branch to release and merge into the default branch"
        required: true
        type: string
      REPOSITORY:
        description: "The repository name (owner/repo format)"
        required: true
        type: string

jobs:
  code-to-master:
    runs-on: ${{ inputs.runs-on }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.REPOSITORY }}
          ref: ${{ inputs.BRANCH_TO_RELEASE }}

      - name: Temporarily Unlock Branch Protection (if enabled)
        id: unlock_branch_protection
        run: |
          # Check if branch protection is enabled
          protection_status=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${{ inputs.REPOSITORY }}/branches/${{ env.default_branch }}/protection" | jq -r '.required_status_checks')

          if [[ -n "$protection_status" ]]; then
            echo "Branch protection is enabled. Temporarily unlocking..."
            curl -X PUT \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github+json" \
              -d '{
                "required_status_checks": null,
                "enforce_admins": true,
                "required_pull_request_reviews": null,
                "restrictions": null,
                "allow_force_pushes": true
              }' \
              "https://api.github.com/repos/${{ inputs.REPOSITORY }}/branches/${{ env.default_branch }}/protection"
          fi

      - name: Merge to Master
        run: |
          git checkout master
          git pull origin master
          git merge ${{ inputs.BRANCH_TO_RELEASE }}
          if [ $? -ne 0 ]; then
            echo "Merge conflict encountered."
            exit 1
          fi
          git push origin master || { echo "Failed to push to origin/master"; exit 1; }

      - name: Restore Branch Protection (if previously enabled)
        run: |
          if [[ -n "$protection_status" ]]; then
            echo "Restoring original branch protection rules..."
            curl -X PUT \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github+json" \
              -d "$protection_status" \ 
              "https://api.github.com/repos/${{ inputs.REPOSITORY }}/branches/${{ env.default_branch }}/protection"
          fi

      - name: Log Success
        run: |
          echo "Successfully merged ${{ inputs.BRANCH_TO_RELEASE }} into master in ${{ inputs.REPOSITORY }}."