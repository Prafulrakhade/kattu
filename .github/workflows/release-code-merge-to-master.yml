name: üöÄ Merge to Master/Main

on:
  workflow_call:
    inputs:
      BRANCH_TO_RELEASE:
        description: "The branch to release and merge into the default branch"
        required: true
        type: string
      REPOSITORY:
        description: "The repository name (owner/repo format)"
        required: true
        type: string
    secrets:
      ACTION_PAT:
        required: true

jobs:
  merge-to-master:
    runs-on: ubuntu-latest
    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.REPOSITORY }}
          ref: ${{ inputs.BRANCH_TO_RELEASE }}

      - name: üîç Get Default Branch
        id: get-default-branch
        run: |
          DEFAULT_BRANCH=$(curl -s -H "Authorization: Bearer ${{ secrets.ACTION_PAT }}" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${{ inputs.REPOSITORY }}" | jq -r '.default_branch')
          echo "DEFAULT_BRANCH=$DEFAULT_BRANCH" >> $GITHUB_ENV
          echo "Default Branch: $DEFAULT_BRANCH"

      - name: üîì Unlock Branch Protection (Disable Lock & Enable Force Push)
        run: |
          RESPONSE=$(curl -s -X PUT \
            -H "Authorization: Bearer ${{ secrets.ACTION_PAT }}" \
            -H "Accept: application/vnd.github+json" \
            -d '{
              "required_status_checks": null,
              "enforce_admins": false,
              "required_pull_request_reviews": null,
              "restrictions": null,
              "allow_force_pushes": true,
              "lock_branch": false
            }' \
            "https://api.github.com/repos/${{ inputs.REPOSITORY }}/branches/${{ env.DEFAULT_BRANCH }}/protection")
          echo "Unlock Branch Protection Response: $RESPONSE"

      - name: üîß Configure Git Credentials
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global credential.helper store
          echo "https://${{ secrets.ACTION_PAT }}@github.com" > ~/.git-credentials
          chmod 600 ~/.git-credentials
          git remote set-url origin https://${{ secrets.ACTION_PAT }}@github.com/${{ inputs.REPOSITORY }}.git
          git remote -v

      - name: üîç Debug Git Authentication
        run: |
          echo "Testing Git Authentication..."
          git ls-remote origin || { echo "‚ùå Authentication failed"; exit 1; }

      - name: üîÑ Merge Release Branch to Default Branch & Update Badges
        run: |
          git fetch --all
          git checkout ${{ inputs.BRANCH_TO_RELEASE }}
          git pull origin ${{ inputs.BRANCH_TO_RELEASE }}
          git checkout ${{ env.DEFAULT_BRANCH }}
          git pull origin ${{ env.DEFAULT_BRANCH }}
          git reset --hard origin/${{ inputs.BRANCH_TO_RELEASE }}

          if grep -q "badge.svg?branch=" README.md; then
            sed -i "s/badge.svg?branch=[^)]*/badge.svg?branch=${{ env.DEFAULT_BRANCH }}/g" README.md
            sed -i "s/push_trigger.yml/push-trigger.yml/g" README.md
            git add README.md
            echo "üîç Showing README Changes Before Committing:"
            git diff --cached
            git commit -m "Update README badges to reflect default branch"
          fi

          echo "Attempting git push..."
          git push -f origin ${{ env.DEFAULT_BRANCH }} || { echo "‚ùå Git push failed"; exit 1; }
          echo "Git push completed."

      - name: üîí Restore Branch Protection (Re-enable Lock & Disable Force Push)
        run: |
          RESPONSE=$(curl -s -X PUT \
            -H "Authorization: Bearer ${{ secrets.ACTION_PAT }}" \
            -H "Accept: application/vnd.github+json" \
            -d '{
              "required_status_checks": null,
              "enforce_admins": false,
              "required_pull_request_reviews": null,
              "restrictions": null,
              "allow_force_pushes": false,
              "lock_branch": true
            }' \
            "https://api.github.com/repos/${{ inputs.REPOSITORY }}/branches/${{ env.DEFAULT_BRANCH }}/protection")
          echo "Restore Branch Protection Response: $RESPONSE"

      - name: ‚úÖ Log Success
        run: |
          echo "‚úÖ Successfully merged ${{ inputs.BRANCH_TO_RELEASE }} into $DEFAULT_BRANCH in ${{ inputs.REPOSITORY }}."