name: Merge to Master

on:
  workflow_call:
    inputs:
      runs-on:
        description: Platform to execute on
        type: string
        default: ubuntu-latest
      BRANCH_TO_RELEASE:
        description: "The branch to release and merge into the default branch"
        required: true
        type: string
      REPOSITORY:
        description: "The repository name (owner/repo format)"
        required: true
        type: string
    secrets:
      ACTION_PAT:
        required: true

jobs:
  merge-to-master:
    runs-on: ${{ inputs.runs-on }}
    steps:
      - name: 🛒 Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.REPOSITORY }}
          ref: ${{ inputs.BRANCH_TO_RELEASE }}

      - name: 🔍 Get Default Branch Name
        id: get-default-branch
        run: |
          default_branch=$(curl -s -H "Authorization: Bearer ${{ secrets.ACTION_PAT }}" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${{ inputs.REPOSITORY }}" | jq -r '.default_branch')
          echo "default-branch=$default_branch" >> $GITHUB_ENV

      - name: 🔒 Backup Existing Branch Protection Rules
        run: |
          PROTECTION=$(curl -s -H "Authorization: Bearer ${{ secrets.ACTION_PAT }}" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${{ inputs.REPOSITORY }}/branches/${{ env.default-branch }}/protection")
          echo "PROTECTION_RULES=$(echo $PROTECTION | base64 -w 0)" >> $GITHUB_ENV

      - name: 🔓 Unlock Branch Protection for Master
        run: |
          curl -X PUT \
            -H "Authorization: Bearer ${{ secrets.ACTION_PAT }}" \
            -H "Accept: application/vnd.github+json" \
            -d '{"required_status_checks": null, "restrictions": null, "allow_force_pushes": true, "enforce_admins": false, "required_pull_request_reviews": null}' \
            "https://api.github.com/repos/${{ inputs.REPOSITORY }}/branches/${{ env.default-branch }}/protection"

      - name: ✅ Verify Force Push Is Enabled
        run: |
          protection_status=$(curl -s -H "Authorization: Bearer ${{ secrets.ACTION_PAT }}" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${{ inputs.REPOSITORY }}/branches/${{ env.default-branch }}/protection" | jq -r '.allow_force_pushes.enabled')

          if [[ "$protection_status" != "true" ]]; then
            echo "Error: Force push is still disabled! Exiting..."
            exit 1
          else
            echo "✅ Force push is enabled. Proceeding..."
          fi

      - name: 🔧 Configure Git with PAT
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git remote remove origin || true
          git remote add origin https://${{ secrets.ACTION_PAT }}@github.com/${{ inputs.REPOSITORY }}
          git remote -v

      - name: 🚀 Merge & Force Push to Master
        run: |
          git fetch --all
          git checkout ${{ inputs.BRANCH_TO_RELEASE }}
          git pull origin ${{ inputs.BRANCH_TO_RELEASE }}
          git checkout ${{ env.default-branch }}
          git pull origin ${{ env.default-branch }}
          git reset --hard origin/${{ inputs.BRANCH_TO_RELEASE }}

          # Debugging: Check if branch is clean
          git status

          # Push changes
          git push -f origin ${{ env.default-branch }}

      - name: 🔄 Restore Original Branch Protection Rules
        run: |
          curl -X PUT \
            -H "Authorization: Bearer ${{ secrets.ACTION_PAT }}" \
            -H "Accept: application/vnd.github+json" \
            --data-binary @<(echo ${{ env.PROTECTION_RULES }} | base64 -d) \
            "https://api.github.com/repos/${{ inputs.REPOSITORY }}/branches/${{ env.default-branch }}/protection"

      - name: ✅ Log Success
        run: |
          echo "🎉 Successfully merged ${{ inputs.BRANCH_TO_RELEASE }} into ${{ env.default-branch }} in ${{ inputs.REPOSITORY }}."
